#!/usr/bin/env node

/**
 * Arguments.
 */

var args = process.argv.slice(2);

/**
 * Serve version.
 */

var version = '0.0.2';

/**
 * Default port.
 */

var port = 3000;

/**
 * Default path to serve.
 */

var path = process.cwd();

/**
 * Use directory listings.
 */

var directory = true;

/**
 * Use logging with optional path.
 */

var log = true;

/**
 * Serve / list hidden files.
 */

var hidden = false;

/**
 * Default log format string.
 */

var logFormat = ':method :url - :response-time ms';

/**
 * Show directory listing icons.
 */

var icons = true;

/**
 * Module dependencies.
 */

var connect = require('connect');

/**
 * Usage information.
 */

var usage = [
    ''
  , '  Usage: serve [options] [dir]'
  , ''
  , '  Options:'
  , ''
  , '    -V, --version       output serve version'
  , '    -F, --format <fmt>  specify the log format string'
  , '    -I, --no-icons      disable icons'
  , '    -L, --no-logs       disable logging'
  , '    -D, --no-dirs       disable directory serving'
  , '    -H, --hidden        enable hidden file serving'
  , '    -p, --port <port>   specify the <port>, defaults to 3000'
  , '    -h, --help          show usage information'
  , ''
].join('\n');

/**
 * Required argument.
 */

function required() {
  if (args.length) return args.shift();
  console.error('  %s requires an argument', arg);
  process.exit(1);
}

// parse arguments

var arg;
while (args.length) {
  switch (arg = args.shift()) {
    case '-h':
    case '--help':
      console.log(usage);
      process.exit(0);
      break;
    case '-V':
    case '--version':
      console.log(version);
      process.exit(0);
      break;
    case '-F':
    case '--format':
      logFormat = required();
      break;
    case '-L':
    case '--no-logs':
      log = false;
      break;
    case '-D':
    case '--no-dirs':
      directory = false;
      break;
    case '-I':
    case '--no-icons':
      icons = false;
      break;
    case '-H':
    case '--hidden':
      hidden = true;
      break;
    case '-p':
    case '--port':
      port = Number(required());
      break;
    default:
      path = arg;
  }
}

// setup the server

var server = connect();

server.use(connect.favicon());
if (log) server.use(connect.logger(logFormat));
connect.static.mime.define({'text/plain':['md']});
server.use(connect.static(path, { hidden: hidden }));
if (directory) server.use(connect.directory(path, { hidden: hidden, icons: icons }));
server.listen(port);
console.log('serving %s on port %d', path, server.address().port);
